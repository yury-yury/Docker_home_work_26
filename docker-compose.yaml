version: '3.3'

services:
  app:
    env_file:
      - .env
    build:
      context: .
    volumes:
      - ./.env:/app/.env
    ports:
      - 5000:5000
    depends_on:
      db:
        condition: service_healthy
      migrations:
       condition: service_completed_successfully
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
  migrations:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "python3 database_create.py "
#      - /bin/bash
#        - -c
#        - |
#          sleep 10
#          python3 database_create.py

    env_file:
      - .env
    #volumes:
      #- ./.env:/app/.env

  db:
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    image: postgres:15.1-alpine
    restart: on-failure
    volumes:
      #- pg_data:/var/lib/postgresql/data
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      #test: pg_isready -U ${POSTGRES_USER} âˆ’d ${POSTGRES_DB}
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10